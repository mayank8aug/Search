{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkumar/Downloads/ReactSearch/src/components/Widgets/Widgets.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Widget from './Widget';\n\nconst Widgets = props => {\n  const {\n    searchedData\n  } = props;\n  const searchState = useSelector(state => state.search);\n  const {\n    currentPage = 0\n  } = searchState;\n  const renderData = searchedData.slice(currentPage * 5, currentPage * 5 + 5);\n  const tagTextObj = {\n    N: 'Noun',\n    V: 'Verb',\n    A: 'Adjective'\n  };\n  const tagDefMap = {};\n  let splitDef;\n  let i;\n  let len;\n  let splitTag;\n  let tagText;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, renderData.map((data, index) => {\n    console.log(index);\n    const {\n      tags,\n      word,\n      defs\n    } = data;\n\n    if (tags && tags.length && defs && defs.length) {\n      for (i = 0, len = tags.length; i < len; i++) {\n        splitDef = defs.split('\\t');\n        splitTag = splitDef[0].toUpperCase();\n\n        if (!tagDefMap[splitTag]) {\n          tagDefMap[splitTag] = [splitDef[1]];\n        } else {\n          tagDefMap[splitTag].push(splitDef[1]);\n        }\n      }\n    }\n\n    return tags && tags.map(tag => {\n      tag = tag.toUpperCase();\n      tagText = tagTextObj[tag];\n      return /*#__PURE__*/React.createElement(Widget, {\n        key: `${index}-${tag}`,\n        data: {\n          tag,\n          tagText,\n          word,\n          defs: tagDefMap[tag]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      });\n    });\n  }));\n};\n\nexport default Widgets;","map":{"version":3,"sources":["/Users/mayankkumar/Downloads/ReactSearch/src/components/Widgets/Widgets.js"],"names":["React","useSelector","Widget","Widgets","props","searchedData","searchState","state","search","currentPage","renderData","slice","tagTextObj","N","V","A","tagDefMap","splitDef","i","len","splitTag","tagText","map","data","index","console","log","tags","word","defs","length","split","toUpperCase","push","tag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AACA,QAAME,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA/B;AACA,QAAM;AAAEC,IAAAA,WAAW,GAAG;AAAhB,MAAsBH,WAA5B;AACA,QAAMI,UAAU,GAAGL,YAAY,CAACM,KAAb,CAAmBF,WAAW,GAAG,CAAjC,EAAoCA,WAAW,GAAG,CAAd,GAAkB,CAAtD,CAAnB;AACA,QAAMG,UAAU,GAAG;AACfC,IAAAA,CAAC,EAAE,MADY;AAEfC,IAAAA,CAAC,EAAE,MAFY;AAGfC,IAAAA,CAAC,EAAE;AAHY,GAAnB;AAKA,QAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,QAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,OAAJ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,UAAU,CAACY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAAuBN,IAA7B;;AACA,QAAII,IAAI,IAAIA,IAAI,CAACG,MAAb,IAAuBD,IAAvB,IAA+BA,IAAI,CAACC,MAAxC,EAAgD;AAC5C,WAAIZ,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGQ,IAAI,CAACG,MAAtB,EAA8BZ,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AACxCD,QAAAA,QAAQ,GAAGY,IAAI,CAACE,KAAL,CAAW,IAAX,CAAX;AACAX,QAAAA,QAAQ,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYe,WAAZ,EAAX;;AACA,YAAI,CAAChB,SAAS,CAACI,QAAD,CAAd,EAA0B;AACtBJ,UAAAA,SAAS,CAACI,QAAD,CAAT,GAAsB,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAtB;AACH,SAFD,MAEO;AACHD,UAAAA,SAAS,CAACI,QAAD,CAAT,CAAoBa,IAApB,CAAyBhB,QAAQ,CAAC,CAAD,CAAjC;AACH;AACJ;AACJ;;AACD,WAAOU,IAAI,IAAIA,IAAI,CAACL,GAAL,CAASY,GAAG,IAAI;AAC3BA,MAAAA,GAAG,GAAGA,GAAG,CAACF,WAAJ,EAAN;AACAX,MAAAA,OAAO,GAAGT,UAAU,CAACsB,GAAD,CAApB;AACA,0BACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAG,GAAEV,KAAM,IAAGU,GAAI,EAA7B;AAAgC,QAAA,IAAI,EAAE;AAAEA,UAAAA,GAAF;AAAOb,UAAAA,OAAP;AAAgBO,UAAAA,IAAhB;AAAsBC,UAAAA,IAAI,EAAEb,SAAS,CAACkB,GAAD;AAArC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KANc,CAAf;AAOH,GArBD,CAFR,CADJ;AA4BH,CA5CD;;AA8CA,eAAe/B,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Widget from './Widget';\n\nconst Widgets = props => {\n    const { searchedData } = props;\n    const searchState = useSelector(state => state.search);\n    const { currentPage = 0 } = searchState;\n    const renderData = searchedData.slice(currentPage * 5, currentPage * 5 + 5);\n    const tagTextObj = {\n        N: 'Noun',\n        V: 'Verb',\n        A: 'Adjective'\n    };\n    const tagDefMap = {};\n    let splitDef;\n    let i;\n    let len;\n    let splitTag;\n    let tagText;\n    return (\n        <div>\n            {\n                renderData.map((data, index) => {\n                    console.log(index);\n                    const { tags, word, defs } = data;\n                    if (tags && tags.length && defs && defs.length) {\n                        for(i = 0, len = tags.length; i < len; i++) {\n                            splitDef = defs.split('\\t');\n                            splitTag = splitDef[0].toUpperCase();\n                            if (!tagDefMap[splitTag]) {\n                                tagDefMap[splitTag] = [splitDef[1]]; \n                            } else {\n                                tagDefMap[splitTag].push(splitDef[1]); \n                            }\n                        }\n                    }\n                    return tags && tags.map(tag => {\n                        tag = tag.toUpperCase();\n                        tagText = tagTextObj[tag];\n                        return (\n                            <Widget key={`${index}-${tag}`} data={{ tag, tagText, word, defs: tagDefMap[tag] }} />\n                        );\n                    });\n                })\n            }\n        </div>\n    );\n}\n\nexport default Widgets;"]},"metadata":{},"sourceType":"module"}