{"ast":null,"code":"import { call, put, takeLatest, all, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { types } from '../actions';\nconst ROOT_URL = 'https://api.datamuse.com/words';\nexport function* fetchDictionaryData({\n  query\n}) {\n  try {\n    const url = `${ROOT_URL}?md=pd&sp=${query}`;\n    const response = yield call(axios.get, url);\n    yield put({\n      type: types.FETCH_DATA_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    console.log('Request failed! Could not fetch dictionary data.');\n    yield put({\n      type: types.FETCH_DATA_FAIL,\n      data: error\n    });\n  }\n}\nexport function* search() {\n  yield all([takeLatest(types.FETCH_DATA_LOAD, fetchDictionaryData), takeEvery(types.FETCH_SYN_ANT_LOAD, fetchSynAnt)]);\n}","map":{"version":3,"sources":["/Users/mayankkumar/Downloads/ReactSearch/src/sagas/search.js"],"names":["call","put","takeLatest","all","takeEvery","axios","types","ROOT_URL","fetchDictionaryData","query","url","response","get","type","FETCH_DATA_SUCCESS","data","error","console","log","FETCH_DATA_FAIL","search","FETCH_DATA_LOAD","FETCH_SYN_ANT_LOAD","fetchSynAnt"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,MAAMC,QAAQ,GAAG,gCAAjB;AAEA,OAAO,UAAUC,mBAAV,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAyC;AAC9C,MAAI;AACF,UAAMC,GAAG,GAAI,GAAEH,QAAS,aAAYE,KAAM,EAA1C;AACA,UAAME,QAAQ,GAAG,MAAMX,IAAI,CAACK,KAAK,CAACO,GAAP,EAAYF,GAAZ,CAA3B;AACA,UAAMT,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEP,KAAK,CAACQ,kBADJ;AAERC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI;AAFP,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACA,UAAMjB,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEP,KAAK,CAACa,eADJ;AAERJ,MAAAA,IAAI,EAAEC;AAFE,KAAD,CAAT;AAID;AACF;AAID,OAAO,UAAUI,MAAV,GAAmB;AACxB,QAAMjB,GAAG,CAAC,CACRD,UAAU,CAACI,KAAK,CAACe,eAAP,EAAwBb,mBAAxB,CADF,EAERJ,SAAS,CAACE,KAAK,CAACgB,kBAAP,EAA2BC,WAA3B,CAFD,CAAD,CAAT;AAID","sourcesContent":["import { call, put, takeLatest, all, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { types } from '../actions';\n\nconst ROOT_URL = 'https://api.datamuse.com/words';\n\nexport function* fetchDictionaryData({ query }) {\n  try {\n    const url = `${ROOT_URL}?md=pd&sp=${query}`;\n    const response = yield call(axios.get, url);\n    yield put({\n      type: types.FETCH_DATA_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    console.log('Request failed! Could not fetch dictionary data.');\n    yield put({\n      type: types.FETCH_DATA_FAIL,\n      data: error\n    });\n  }\n}\n\n\n\nexport function* search() {\n  yield all([\n    takeLatest(types.FETCH_DATA_LOAD, fetchDictionaryData),\n    takeEvery(types.FETCH_SYN_ANT_LOAD, fetchSynAnt)\n  ])\n}"]},"metadata":{},"sourceType":"module"}